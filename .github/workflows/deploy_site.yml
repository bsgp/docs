name: ci

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - '**/RELEASE'

permissions:
  contents: write

jobs:
  gh-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.github_token }}
          output-file: "false"
          skip-on-empty: "false"
      - name: Echo Changelog Outputs
        run: echo $CHANGELOG_OUTPUTS
        env:
          CHANGELOG_OUTPUTS: ${{ toJSON(steps.changelog.outputs) }}
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_OWNER_TOKEN }}
          prerelease: false
          draft: false
          files: bin/*
          generate_release_notes: true
          tag_name: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          
  deploy:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [gh-release]
    steps:
      - uses: actions/checkout@v4
      # - name: Configure Git Credentials
      #   run: |
      #     git config user.name github-actions[bot]
      #     git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: pip install mkdocs-mermaid2-plugin
      - run: mkdocs build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - run: aws s3 sync site/ s3://docs-bsg.support/site --delete
